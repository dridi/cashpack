.. License: BSD-2-Clause
.. (c) 2016-2024 Dridi Boukelmoune <dridi.boukelmoune@gmail.com>

==========================
hpack_strerror, hpack_dump
==========================

----------------------------
error handling with cashpack
----------------------------

:Title upper: HPACK_ERROR
:Manual section: 3

SYNOPSIS
========

| **#include <sys/types.h>**
| **#include <stdint.h>**
| **#include <hpack.h>**
|
| **struct hpack;**
| **enum hpack_result_e;**
|
| **typedef void hpack_dump_f(void** *\*priv*\ **, const char** *\*fmt*\ **, \
    ...);**
|
| **const char * hpack_strerror(enum hpack_result_e** *res*\ **);**
| **void hpack_dump(struct hpack** *\*hp*\ **, hpack_dump_f** *\*dump*\ **, \
    void** *\*priv*\ **);**

DESCRIPTION
===========

This is an overview of error handling in cashpack, a stateless event-driven
HPACK codec written in C. cashpack offers a detailed set of result codes for
error handling. Most of the result codes map to errors, and most errors leave
a defunct codec that can no longer be used.

The ``hpack_strerror()`` function is a thread-safe function that translates an
error code into a human readable short description.

The ``hpack_dump()`` function outputs the internal state of a ``struct hpack``
instance. The output is sent via a ``printf``-like callback to let the user
choose how to report the dump. This is mostly useful when cashpack is built
with assertions enabled, to report the state when the program aborts. This
report can then be submitted as a bug report, ideally along with the HTTP
message that was being processed at the time of the crash.

RESULT CODES
============

Only errors have a negative result code, so functions can be called with a
generic style::

    retval = hpack_xxx(...);
    if (retval < 0) {
    	/* error handling */
    }

The list of possible results:

.. include:: @builddir@/hpr2rst.rst

RETURN VALUE
============

The ``hpack_strerror()`` function returns a constant string corresponding to
one of the short descriptions detailed above, or ``NULL`` for unknown values.

EXAMPLE
=======

The ``hpack_dump()`` function integrates well with **vfprintf**\(3):

.. include:: @builddir@/hpack_dump.src
    :literal:

SEE ALSO
========

**cashpack**\(3),
**hpack_decode**\(3),
**hpack_decode_fields**\(3),
**hpack_decoder**\(3),
**hpack_dynamic**\(3),
**hpack_encode**\(3),
**hpack_encoder**\(3),
**hpack_entry**\(3),
**hpack_event_id**\(3),
**hpack_free**\(3),
**hpack_limit**\(3),
**hpack_monitor**\(3),
**hpack_resize**\(3),
**hpack_search**\(3),
**hpack_skip**\(3),
**hpack_static**\(3),
**hpack_tables**\(3),
**hpack_trim**\(3)
